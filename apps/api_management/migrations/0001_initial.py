# Generated by Django 5.2.6 on 2025-09-12 15:23

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ApiProvider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[("aihubmix", "推理时代"), ("coze", "Coze")],
                        max_length=50,
                        unique=True,
                        verbose_name="提供商名称",
                    ),
                ),
                ("display_name", models.CharField(max_length=100, verbose_name="显示名称")),
                ("base_url", models.URLField(verbose_name="基础URL")),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "API提供商",
                "verbose_name_plural": "API提供商",
                "db_table": "api_provider",
            },
        ),
        migrations.CreateModel(
            name="ApiInterface",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="接口名称")),
                ("model", models.CharField(max_length=100, verbose_name="模型名称")),
                (
                    "temperature",
                    models.FloatField(
                        default=0.8,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(2.0),
                        ],
                        verbose_name="温度参数",
                    ),
                ),
                (
                    "max_tokens",
                    models.IntegerField(
                        default=1024,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="最大令牌数",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建用户",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api_management.apiprovider",
                        verbose_name="API提供商",
                    ),
                ),
            ],
            options={
                "verbose_name": "API接口配置",
                "verbose_name_plural": "API接口配置",
                "db_table": "api_interface",
                "unique_together": {("provider", "name", "user")},
            },
        ),
        migrations.CreateModel(
            name="ApiCallLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_data", models.JSONField(verbose_name="请求数据")),
                (
                    "response_data",
                    models.JSONField(blank=True, null=True, verbose_name="响应数据"),
                ),
                ("status_code", models.IntegerField(verbose_name="状态码")),
                ("response_time", models.FloatField(verbose_name="响应时间(秒)")),
                ("prompt_tokens", models.IntegerField(default=0, verbose_name="输入令牌数")),
                (
                    "completion_tokens",
                    models.IntegerField(default=0, verbose_name="输出令牌数"),
                ),
                ("total_tokens", models.IntegerField(default=0, verbose_name="总令牌数")),
                (
                    "error_message",
                    models.TextField(blank=True, null=True, verbose_name="错误信息"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="调用时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="调用用户",
                    ),
                ),
                (
                    "interface",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api_management.apiinterface",
                        verbose_name="接口配置",
                    ),
                ),
            ],
            options={
                "verbose_name": "API调用日志",
                "verbose_name_plural": "API调用日志",
                "db_table": "api_call_log",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ApiToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.TextField(verbose_name="API Token")),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "provider",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api_management.apiprovider",
                        verbose_name="API提供商",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="配置用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "API Token",
                "verbose_name_plural": "API Token",
                "db_table": "api_token",
            },
        ),
    ]
