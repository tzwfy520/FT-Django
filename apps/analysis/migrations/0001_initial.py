# Generated by Django 5.2.6 on 2025-09-11 06:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("stocks", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AnalysisTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="模板名称")),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("realtime", "实时分析"),
                            ("daily", "日常复盘"),
                            ("recommendation", "股票推荐"),
                            ("custom", "自定义分析"),
                        ],
                        max_length=20,
                        verbose_name="模板类型",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="模板描述")),
                ("analysis_config", models.TextField(verbose_name="分析配置(JSON格式)")),
                ("indicators", models.TextField(verbose_name="技术指标配置(JSON格式)")),
                ("is_active", models.BooleanField(default=True, verbose_name="是否有效")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "分析模板",
                "verbose_name_plural": "分析模板",
                "db_table": "analysis_template",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PortfolioAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="组合名称")),
                ("description", models.TextField(blank=True, verbose_name="组合描述")),
                (
                    "total_capital",
                    models.DecimalField(
                        decimal_places=2, max_digits=20, verbose_name="总资金"
                    ),
                ),
                (
                    "risk_tolerance",
                    models.CharField(
                        choices=[
                            ("conservative", "保守型"),
                            ("moderate", "稳健型"),
                            ("aggressive", "激进型"),
                        ],
                        max_length=15,
                        verbose_name="风险偏好",
                    ),
                ),
                (
                    "expected_return",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=8,
                        null=True,
                        verbose_name="预期收益率",
                    ),
                ),
                (
                    "expected_risk",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=8,
                        null=True,
                        verbose_name="预期风险",
                    ),
                ),
                (
                    "sharpe_ratio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=8,
                        null=True,
                        verbose_name="夏普比率",
                    ),
                ),
                ("analysis_date", models.DateField(verbose_name="分析日期")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "投资组合分析",
                "verbose_name_plural": "投资组合分析",
                "db_table": "portfolio_analysis",
                "ordering": ["-analysis_date"],
            },
        ),
        migrations.CreateModel(
            name="PortfolioStock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=4, max_digits=8, verbose_name="权重(%)"
                    ),
                ),
                ("shares", models.IntegerField(verbose_name="股数")),
                (
                    "cost_price",
                    models.DecimalField(
                        decimal_places=3, max_digits=10, verbose_name="成本价格"
                    ),
                ),
                (
                    "portfolio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="analysis.portfolioanalysis",
                        verbose_name="投资组合",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stocks.stockbasicinfo",
                        verbose_name="股票",
                    ),
                ),
            ],
            options={
                "verbose_name": "投资组合股票",
                "verbose_name_plural": "投资组合股票",
                "db_table": "portfolio_stock",
                "unique_together": {("portfolio", "stock")},
            },
        ),
        migrations.AddField(
            model_name="portfolioanalysis",
            name="stocks",
            field=models.ManyToManyField(
                through="analysis.PortfolioStock",
                to="stocks.stockbasicinfo",
                verbose_name="包含股票",
            ),
        ),
        migrations.CreateModel(
            name="StockRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recommendation_source",
                    models.CharField(
                        choices=[
                            ("dragon_tiger", "龙虎榜推荐"),
                            ("money_flow", "资金流向推荐"),
                            ("technical", "技术面推荐"),
                            ("ai_analysis", "AI分析推荐"),
                            ("manual", "人工推荐"),
                        ],
                        max_length=20,
                        verbose_name="推荐来源",
                    ),
                ),
                ("recommendation_date", models.DateField(verbose_name="推荐日期")),
                ("title", models.CharField(max_length=200, verbose_name="推荐标题")),
                ("reason", models.TextField(verbose_name="推荐理由")),
                (
                    "risk_level",
                    models.CharField(
                        choices=[("low", "低风险"), ("medium", "中风险"), ("high", "高风险")],
                        max_length=10,
                        verbose_name="风险等级",
                    ),
                ),
                (
                    "recommended_price",
                    models.DecimalField(
                        decimal_places=3, max_digits=10, verbose_name="推荐买入价"
                    ),
                ),
                (
                    "target_price",
                    models.DecimalField(
                        decimal_places=3, max_digits=10, verbose_name="目标价格"
                    ),
                ),
                (
                    "stop_loss_price",
                    models.DecimalField(
                        decimal_places=3, max_digits=10, verbose_name="止损价格"
                    ),
                ),
                (
                    "expected_return_pct",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="预期收益率(%)"
                    ),
                ),
                ("holding_period_days", models.IntegerField(verbose_name="建议持有天数")),
                ("is_active", models.BooleanField(default=True, verbose_name="是否有效")),
                (
                    "is_hit_target",
                    models.BooleanField(default=False, verbose_name="是否达到目标价"),
                ),
                (
                    "is_hit_stop_loss",
                    models.BooleanField(default=False, verbose_name="是否触及止损价"),
                ),
                (
                    "actual_return_pct",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="实际收益率(%)",
                    ),
                ),
                (
                    "max_return_pct",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="最大收益率(%)",
                    ),
                ),
                (
                    "max_drawdown_pct",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="最大回撤(%)",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="推荐者",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stocks.stockbasicinfo",
                        verbose_name="股票",
                    ),
                ),
            ],
            options={
                "verbose_name": "股票推荐",
                "verbose_name_plural": "股票推荐",
                "db_table": "stock_recommendation",
                "ordering": ["-recommendation_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StockAnalysisResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("realtime", "实时分析"),
                            ("daily", "日常复盘"),
                            ("recommendation", "推荐分析"),
                            ("technical", "技术分析"),
                            ("fundamental", "基本面分析"),
                        ],
                        max_length=20,
                        verbose_name="分析类型",
                    ),
                ),
                ("analysis_date", models.DateField(verbose_name="分析日期")),
                (
                    "overall_rating",
                    models.CharField(
                        choices=[
                            ("strong_buy", "强烈买入"),
                            ("buy", "买入"),
                            ("hold", "持有"),
                            ("sell", "卖出"),
                            ("strong_sell", "强烈卖出"),
                        ],
                        max_length=20,
                        verbose_name="综合评级",
                    ),
                ),
                (
                    "confidence_score",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="置信度(0-100)"
                    ),
                ),
                (
                    "target_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="目标价格",
                    ),
                ),
                (
                    "stop_loss_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="止损价格",
                    ),
                ),
                (
                    "entry_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="建议买入价",
                    ),
                ),
                (
                    "technical_indicators",
                    models.TextField(blank=True, verbose_name="技术指标结果(JSON格式)"),
                ),
                (
                    "support_levels",
                    models.TextField(blank=True, verbose_name="支撑位(JSON格式)"),
                ),
                (
                    "resistance_levels",
                    models.TextField(blank=True, verbose_name="阻力位(JSON格式)"),
                ),
                ("pe_analysis", models.TextField(blank=True, verbose_name="市盈率分析")),
                ("pb_analysis", models.TextField(blank=True, verbose_name="市净率分析")),
                ("roe_analysis", models.TextField(blank=True, verbose_name="ROE分析")),
                (
                    "money_flow_analysis",
                    models.TextField(blank=True, verbose_name="资金流向分析"),
                ),
                ("volume_analysis", models.TextField(blank=True, verbose_name="成交量分析")),
                ("analysis_summary", models.TextField(verbose_name="分析摘要")),
                ("risk_warning", models.TextField(blank=True, verbose_name="风险提示")),
                ("ai_analysis", models.TextField(blank=True, verbose_name="AI分析结果")),
                (
                    "ai_model_used",
                    models.CharField(blank=True, max_length=50, verbose_name="使用的AI模型"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="分析者",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stocks.stockbasicinfo",
                        verbose_name="股票",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="analysis.analysistemplate",
                        verbose_name="分析模板",
                    ),
                ),
            ],
            options={
                "verbose_name": "股票分析结果",
                "verbose_name_plural": "股票分析结果",
                "db_table": "stock_analysis_result",
                "ordering": ["-analysis_date", "-created_at"],
                "unique_together": {("stock", "analysis_type", "analysis_date")},
            },
        ),
        migrations.CreateModel(
            name="TechnicalIndicator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "indicator_type",
                    models.CharField(
                        choices=[
                            ("MA", "移动平均线"),
                            ("EMA", "指数移动平均线"),
                            ("MACD", "MACD"),
                            ("RSI", "RSI"),
                            ("KDJ", "KDJ"),
                            ("BOLL", "布林带"),
                            ("VOL", "成交量指标"),
                            ("OBV", "OBV"),
                            ("CCI", "CCI"),
                            ("WR", "威廉指标"),
                        ],
                        max_length=10,
                        verbose_name="指标类型",
                    ),
                ),
                ("trade_date", models.DateField(verbose_name="交易日期")),
                ("indicator_values", models.TextField(verbose_name="指标值(JSON格式)")),
                (
                    "signal",
                    models.CharField(
                        choices=[
                            ("buy", "买入信号"),
                            ("sell", "卖出信号"),
                            ("hold", "持有信号"),
                            ("neutral", "中性"),
                        ],
                        max_length=10,
                        verbose_name="信号",
                    ),
                ),
                (
                    "signal_strength",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="信号强度(0-100)"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stocks.stockbasicinfo",
                        verbose_name="股票",
                    ),
                ),
            ],
            options={
                "verbose_name": "技术指标",
                "verbose_name_plural": "技术指标",
                "db_table": "technical_indicator",
                "ordering": ["-trade_date"],
                "unique_together": {("stock", "indicator_type", "trade_date")},
            },
        ),
    ]
