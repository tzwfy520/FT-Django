# Generated by Django 5.2.6 on 2025-09-11 06:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DataUpdateTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="任务名称")),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("stock_basic", "股票基础信息"),
                            ("stock_realtime", "股票实时数据"),
                            ("stock_history", "股票历史数据"),
                            ("stock_minute", "股票分时数据"),
                            ("market_realtime", "大盘实时数据"),
                            ("market_history", "大盘历史数据"),
                            ("industry_data", "行业数据"),
                            ("concept_data", "概念数据"),
                            ("money_flow", "资金流向"),
                            ("dragon_tiger", "龙虎榜"),
                            ("margin_trading", "两融数据"),
                        ],
                        max_length=30,
                        verbose_name="数据类型",
                    ),
                ),
                (
                    "target_codes",
                    models.TextField(blank=True, verbose_name="目标代码(多个用逗号分隔)"),
                ),
                ("update_frequency", models.IntegerField(verbose_name="更新频率(分钟)")),
                (
                    "is_market_time_only",
                    models.BooleanField(default=True, verbose_name="仅交易时间执行"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否激活")),
                (
                    "last_update_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="最后更新时间"),
                ),
                (
                    "last_update_count",
                    models.IntegerField(default=0, verbose_name="最后更新数量"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "数据更新任务",
                "verbose_name_plural": "数据更新任务",
                "db_table": "data_update_task",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=50, unique=True, verbose_name="分类名称"),
                ),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                ("is_active", models.BooleanField(default=True, verbose_name="是否有效")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "任务分类",
                "verbose_name_plural": "任务分类",
                "db_table": "task_category",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ScheduledTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="任务名称"),
                ),
                ("description", models.TextField(blank=True, verbose_name="任务描述")),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("periodic", "周期任务"),
                            ("cron", "定时任务"),
                            ("once", "一次性任务"),
                        ],
                        max_length=20,
                        verbose_name="任务类型",
                    ),
                ),
                (
                    "task_module",
                    models.CharField(max_length=200, verbose_name="任务模块路径"),
                ),
                (
                    "task_function",
                    models.CharField(max_length=100, verbose_name="任务函数名"),
                ),
                (
                    "task_args",
                    models.TextField(blank=True, verbose_name="任务参数(JSON格式)"),
                ),
                (
                    "interval_seconds",
                    models.IntegerField(blank=True, null=True, verbose_name="间隔秒数"),
                ),
                (
                    "cron_expression",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Cron表达式"
                    ),
                ),
                (
                    "execute_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="执行时间"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "激活"),
                            ("inactive", "未激活"),
                            ("paused", "暂停"),
                            ("error", "错误"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                ("priority", models.IntegerField(default=5, verbose_name="优先级(1-10)")),
                ("max_retries", models.IntegerField(default=3, verbose_name="最大重试次数")),
                (
                    "timeout_seconds",
                    models.IntegerField(default=300, verbose_name="超时时间(秒)"),
                ),
                (
                    "last_run_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="最后执行时间"),
                ),
                (
                    "next_run_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="下次执行时间"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="tasks.taskcategory",
                        verbose_name="任务分类",
                    ),
                ),
            ],
            options={
                "verbose_name": "定时任务",
                "verbose_name_plural": "定时任务",
                "db_table": "scheduled_task",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "execution_id",
                    models.CharField(max_length=100, unique=True, verbose_name="执行ID"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "等待执行"),
                            ("running", "执行中"),
                            ("success", "执行成功"),
                            ("failed", "执行失败"),
                            ("timeout", "执行超时"),
                            ("cancelled", "已取消"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="执行状态",
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="开始时间"),
                ),
                (
                    "end_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="结束时间"),
                ),
                (
                    "duration_seconds",
                    models.FloatField(blank=True, null=True, verbose_name="执行时长(秒)"),
                ),
                ("result_data", models.TextField(blank=True, verbose_name="执行结果")),
                ("error_message", models.TextField(blank=True, verbose_name="错误信息")),
                ("traceback_info", models.TextField(blank=True, verbose_name="错误堆栈")),
                ("retry_count", models.IntegerField(default=0, verbose_name="重试次数")),
                (
                    "worker_name",
                    models.CharField(blank=True, max_length=100, verbose_name="执行节点"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tasks.scheduledtask",
                        verbose_name="关联任务",
                    ),
                ),
            ],
            options={
                "verbose_name": "任务执行记录",
                "verbose_name_plural": "任务执行记录",
                "db_table": "task_execution",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("DEBUG", "DEBUG"),
                            ("INFO", "INFO"),
                            ("WARNING", "WARNING"),
                            ("ERROR", "ERROR"),
                            ("CRITICAL", "CRITICAL"),
                        ],
                        max_length=10,
                        verbose_name="日志级别",
                    ),
                ),
                ("message", models.TextField(verbose_name="日志消息")),
                (
                    "module",
                    models.CharField(blank=True, max_length=100, verbose_name="模块名"),
                ),
                (
                    "function",
                    models.CharField(blank=True, max_length=100, verbose_name="函数名"),
                ),
                (
                    "line_number",
                    models.IntegerField(blank=True, null=True, verbose_name="行号"),
                ),
                (
                    "extra_data",
                    models.TextField(blank=True, verbose_name="额外数据(JSON格式)"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "task_execution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tasks.taskexecution",
                        verbose_name="任务执行记录",
                    ),
                ),
            ],
            options={
                "verbose_name": "任务日志",
                "verbose_name_plural": "任务日志",
                "db_table": "task_log",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskDependency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dependency_type",
                    models.CharField(
                        choices=[
                            ("success", "成功后执行"),
                            ("failure", "失败后执行"),
                            ("always", "总是执行"),
                        ],
                        default="success",
                        max_length=20,
                        verbose_name="依赖类型",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "child_task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parent_dependencies",
                        to="tasks.scheduledtask",
                        verbose_name="子任务",
                    ),
                ),
                (
                    "parent_task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_dependencies",
                        to="tasks.scheduledtask",
                        verbose_name="父任务",
                    ),
                ),
            ],
            options={
                "verbose_name": "任务依赖关系",
                "verbose_name_plural": "任务依赖关系",
                "db_table": "task_dependency",
                "unique_together": {("parent_task", "child_task")},
            },
        ),
    ]
